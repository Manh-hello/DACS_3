// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.project.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircleImageView avatar;

  @NonNull
  public final ImageButton btnAdd;

  @NonNull
  public final ImageButton btnAddCart;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnBell;

  @NonNull
  public final AppCompatButton btnBuy;

  @NonNull
  public final ImageButton btnCart;

  @NonNull
  public final ImageButton btnSub;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final TextView countPay;

  @NonNull
  public final TextView dsc;

  @NonNull
  public final ViewPager2 imgProduct;

  @NonNull
  public final ConstraintLayout layout2;

  @NonNull
  public final LinearLayout layout3;

  @NonNull
  public final LinearLayout layoutCount;

  @NonNull
  public final LinearLayout layoutPrice;

  @NonNull
  public final LinearLayout layoutStore;

  @NonNull
  public final ConstraintLayout layoutTop1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final RecyclerView listPic;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView namePerson;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final RecyclerView rvEvaluate;

  @NonNull
  public final Spinner spnColor;

  @NonNull
  public final Spinner spnSize;

  @NonNull
  public final TextView tvCount;

  @NonNull
  public final TextView tvDecripton;

  @NonNull
  public final TextView tvEvaluate;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvx;

  private ActivityProductDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircleImageView avatar, @NonNull ImageButton btnAdd, @NonNull ImageButton btnAddCart,
      @NonNull ImageButton btnBack, @NonNull ImageButton btnBell, @NonNull AppCompatButton btnBuy,
      @NonNull ImageButton btnCart, @NonNull ImageButton btnSub,
      @NonNull ConstraintLayout container, @NonNull TextView countPay, @NonNull TextView dsc,
      @NonNull ViewPager2 imgProduct, @NonNull ConstraintLayout layout2,
      @NonNull LinearLayout layout3, @NonNull LinearLayout layoutCount,
      @NonNull LinearLayout layoutPrice, @NonNull LinearLayout layoutStore,
      @NonNull ConstraintLayout layoutTop1, @NonNull LinearLayout linearLayout2,
      @NonNull RecyclerView listPic, @NonNull ConstraintLayout main, @NonNull TextView namePerson,
      @NonNull ProgressBar progress, @NonNull RecyclerView rvEvaluate, @NonNull Spinner spnColor,
      @NonNull Spinner spnSize, @NonNull TextView tvCount, @NonNull TextView tvDecripton,
      @NonNull TextView tvEvaluate, @NonNull TextView tvPrice, @NonNull TextView tvTitle,
      @NonNull TextView tvx) {
    this.rootView = rootView;
    this.avatar = avatar;
    this.btnAdd = btnAdd;
    this.btnAddCart = btnAddCart;
    this.btnBack = btnBack;
    this.btnBell = btnBell;
    this.btnBuy = btnBuy;
    this.btnCart = btnCart;
    this.btnSub = btnSub;
    this.container = container;
    this.countPay = countPay;
    this.dsc = dsc;
    this.imgProduct = imgProduct;
    this.layout2 = layout2;
    this.layout3 = layout3;
    this.layoutCount = layoutCount;
    this.layoutPrice = layoutPrice;
    this.layoutStore = layoutStore;
    this.layoutTop1 = layoutTop1;
    this.linearLayout2 = linearLayout2;
    this.listPic = listPic;
    this.main = main;
    this.namePerson = namePerson;
    this.progress = progress;
    this.rvEvaluate = rvEvaluate;
    this.spnColor = spnColor;
    this.spnSize = spnSize;
    this.tvCount = tvCount;
    this.tvDecripton = tvDecripton;
    this.tvEvaluate = tvEvaluate;
    this.tvPrice = tvPrice;
    this.tvTitle = tvTitle;
    this.tvx = tvx;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avatar;
      CircleImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.btnAdd;
      ImageButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnAddCart;
      ImageButton btnAddCart = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCart == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnBell;
      ImageButton btnBell = ViewBindings.findChildViewById(rootView, id);
      if (btnBell == null) {
        break missingId;
      }

      id = R.id.btnBuy;
      AppCompatButton btnBuy = ViewBindings.findChildViewById(rootView, id);
      if (btnBuy == null) {
        break missingId;
      }

      id = R.id.btnCart;
      ImageButton btnCart = ViewBindings.findChildViewById(rootView, id);
      if (btnCart == null) {
        break missingId;
      }

      id = R.id.btnSub;
      ImageButton btnSub = ViewBindings.findChildViewById(rootView, id);
      if (btnSub == null) {
        break missingId;
      }

      id = R.id.container;
      ConstraintLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.countPay;
      TextView countPay = ViewBindings.findChildViewById(rootView, id);
      if (countPay == null) {
        break missingId;
      }

      id = R.id.dsc;
      TextView dsc = ViewBindings.findChildViewById(rootView, id);
      if (dsc == null) {
        break missingId;
      }

      id = R.id.imgProduct;
      ViewPager2 imgProduct = ViewBindings.findChildViewById(rootView, id);
      if (imgProduct == null) {
        break missingId;
      }

      id = R.id.layout2;
      ConstraintLayout layout2 = ViewBindings.findChildViewById(rootView, id);
      if (layout2 == null) {
        break missingId;
      }

      id = R.id.layout3;
      LinearLayout layout3 = ViewBindings.findChildViewById(rootView, id);
      if (layout3 == null) {
        break missingId;
      }

      id = R.id.layoutCount;
      LinearLayout layoutCount = ViewBindings.findChildViewById(rootView, id);
      if (layoutCount == null) {
        break missingId;
      }

      id = R.id.layoutPrice;
      LinearLayout layoutPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutPrice == null) {
        break missingId;
      }

      id = R.id.layoutStore;
      LinearLayout layoutStore = ViewBindings.findChildViewById(rootView, id);
      if (layoutStore == null) {
        break missingId;
      }

      id = R.id.layoutTop1;
      ConstraintLayout layoutTop1 = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.listPic;
      RecyclerView listPic = ViewBindings.findChildViewById(rootView, id);
      if (listPic == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.namePerson;
      TextView namePerson = ViewBindings.findChildViewById(rootView, id);
      if (namePerson == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.rvEvaluate;
      RecyclerView rvEvaluate = ViewBindings.findChildViewById(rootView, id);
      if (rvEvaluate == null) {
        break missingId;
      }

      id = R.id.spnColor;
      Spinner spnColor = ViewBindings.findChildViewById(rootView, id);
      if (spnColor == null) {
        break missingId;
      }

      id = R.id.spnSize;
      Spinner spnSize = ViewBindings.findChildViewById(rootView, id);
      if (spnSize == null) {
        break missingId;
      }

      id = R.id.tvCount;
      TextView tvCount = ViewBindings.findChildViewById(rootView, id);
      if (tvCount == null) {
        break missingId;
      }

      id = R.id.tvDecripton;
      TextView tvDecripton = ViewBindings.findChildViewById(rootView, id);
      if (tvDecripton == null) {
        break missingId;
      }

      id = R.id.tvEvaluate;
      TextView tvEvaluate = ViewBindings.findChildViewById(rootView, id);
      if (tvEvaluate == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvx;
      TextView tvx = ViewBindings.findChildViewById(rootView, id);
      if (tvx == null) {
        break missingId;
      }

      return new ActivityProductDetailBinding((ConstraintLayout) rootView, avatar, btnAdd,
          btnAddCart, btnBack, btnBell, btnBuy, btnCart, btnSub, container, countPay, dsc,
          imgProduct, layout2, layout3, layoutCount, layoutPrice, layoutStore, layoutTop1,
          linearLayout2, listPic, main, namePerson, progress, rvEvaluate, spnColor, spnSize,
          tvCount, tvDecripton, tvEvaluate, tvPrice, tvTitle, tvx);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
