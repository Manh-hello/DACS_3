// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultFindBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnFind;

  @NonNull
  public final EditText edtFind;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView progress;

  @NonNull
  public final ProgressBar progress1;

  @NonNull
  public final RecyclerView rv;

  private ActivityResultFindBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton btnBack, @NonNull ImageButton btnFind, @NonNull EditText edtFind,
      @NonNull ConstraintLayout main, @NonNull TextView progress, @NonNull ProgressBar progress1,
      @NonNull RecyclerView rv) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnFind = btnFind;
    this.edtFind = edtFind;
    this.main = main;
    this.progress = progress;
    this.progress1 = progress1;
    this.rv = rv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultFindBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultFindBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result_find, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultFindBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnFind;
      ImageButton btnFind = ViewBindings.findChildViewById(rootView, id);
      if (btnFind == null) {
        break missingId;
      }

      id = R.id.edtFind;
      EditText edtFind = ViewBindings.findChildViewById(rootView, id);
      if (edtFind == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.progress;
      TextView progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.progress1;
      ProgressBar progress1 = ViewBindings.findChildViewById(rootView, id);
      if (progress1 == null) {
        break missingId;
      }

      id = R.id.rv;
      RecyclerView rv = ViewBindings.findChildViewById(rootView, id);
      if (rv == null) {
        break missingId;
      }

      return new ActivityResultFindBinding((ConstraintLayout) rootView, btnBack, btnFind, edtFind,
          main, progress, progress1, rv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
