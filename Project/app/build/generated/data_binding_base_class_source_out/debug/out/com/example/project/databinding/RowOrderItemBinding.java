// Generated by view binder compiler. Do not edit!
package com.example.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowOrderItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnAccess;

  @NonNull
  public final AppCompatButton btnError;

  @NonNull
  public final AppCompatButton btnEvaluate;

  @NonNull
  public final AppCompatButton btnInfo;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView img;

  @NonNull
  public final TextView tvColor;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvSize;

  private RowOrderItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnAccess, @NonNull AppCompatButton btnError,
      @NonNull AppCompatButton btnEvaluate, @NonNull AppCompatButton btnInfo,
      @NonNull TextView date, @NonNull ImageView img, @NonNull TextView tvColor,
      @NonNull TextView tvName, @NonNull TextView tvPrice, @NonNull TextView tvQuantity,
      @NonNull TextView tvSize) {
    this.rootView = rootView;
    this.btnAccess = btnAccess;
    this.btnError = btnError;
    this.btnEvaluate = btnEvaluate;
    this.btnInfo = btnInfo;
    this.date = date;
    this.img = img;
    this.tvColor = tvColor;
    this.tvName = tvName;
    this.tvPrice = tvPrice;
    this.tvQuantity = tvQuantity;
    this.tvSize = tvSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowOrderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowOrderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_order_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowOrderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAccess;
      AppCompatButton btnAccess = ViewBindings.findChildViewById(rootView, id);
      if (btnAccess == null) {
        break missingId;
      }

      id = R.id.btnError;
      AppCompatButton btnError = ViewBindings.findChildViewById(rootView, id);
      if (btnError == null) {
        break missingId;
      }

      id = R.id.btnEvaluate;
      AppCompatButton btnEvaluate = ViewBindings.findChildViewById(rootView, id);
      if (btnEvaluate == null) {
        break missingId;
      }

      id = R.id.btnInfo;
      AppCompatButton btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.tvColor;
      TextView tvColor = ViewBindings.findChildViewById(rootView, id);
      if (tvColor == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvQuantity;
      TextView tvQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantity == null) {
        break missingId;
      }

      id = R.id.tvSize;
      TextView tvSize = ViewBindings.findChildViewById(rootView, id);
      if (tvSize == null) {
        break missingId;
      }

      return new RowOrderItemBinding((ConstraintLayout) rootView, btnAccess, btnError, btnEvaluate,
          btnInfo, date, img, tvColor, tvName, tvPrice, tvQuantity, tvSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
